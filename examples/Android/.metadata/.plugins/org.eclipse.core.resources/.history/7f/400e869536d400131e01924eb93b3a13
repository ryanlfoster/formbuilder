package org.tpweb.formbuilder;

import java.util.ArrayList;
import java.util.HashMap;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.AsyncTask;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.BaseAdapter;
import android.widget.TextView;
import android.widget.AdapterView.OnItemClickListener;

public class ListAdapter  extends BaseAdapter {
	private Activity activity;
    private ArrayList<HashMap<String, Object>> data;
    private static LayoutInflater inflater=null;
    private CouchDB couchdb;
    
    public ListAdapter(Activity a, ArrayList<HashMap<String, Object>> d, CouchDB couchdb) {
        activity = a;
        data=d;
        inflater = (LayoutInflater)activity.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
        this.couchdb = couchdb;
    }
	
	@Override
	public int getCount() {
		return data.size();
	}

	@Override
	public Object getItem(int position) {
		return position;
	}

	@Override
	public long getItemId(int position) {
		return position;
	}

	@Override
	public View getView(int position, View convertView, ViewGroup parent) {
		View vi=convertView;
        if(convertView==null) {
            vi = inflater.inflate(R.layout.row, null);
        }
        TextView _title = (TextView)vi.findViewById(R.id.title);
        HashMap<String, Object> content = data.get(position);
        
		_title.setText("");
		
        return vi;
	}
	private class LoadData extends AsyncTask<String, Void, Object> {


		@Override
		protected Object doInBackground(String... arg0) {
			if(couchdb.createDatabase("formbuilder")) {
				return couchdb.getAllDocuments();
			}
			
			return null;
		}

		@Override
		protected void onPostExecute(Object result) {
			contentList.clear();
			if(result != null) {
				@SuppressWarnings("unchecked")
				HashMap<String, Object> r = (HashMap<String, Object>)result;
				if(r.containsKey("rows")) {
					try {
						JSONArray jsonResponse = new JSONArray(r.get("rows") + "");
						for(int i = 0; i < jsonResponse.length(); i++) {
							JSONObject json = new JSONObject(jsonResponse.get(i) + "");
							HashMap<String, Object> map = new HashMap<String, Object>();
							map.put("id", json.getString("id"));
							contentList.add(map);
						}
					} catch (JSONException e) {
						e.printStackTrace();
					}
				}
			}
			adapter = new ListAdapter(activity, contentList, couchdb);
			list.setAdapter(adapter);
			list.setOnItemClickListener(new OnItemClickListener() {
				@Override
				public void onItemClick(AdapterView<?> parent, View view, int position, long _id) {
					int id = (Integer) contentList.get(position).get("id");
					Intent i = new Intent(getApplicationContext(), FormViewer.class);
					i.putExtra("id", id);
					startActivity(i);
				}
			});

		}

		@Override
		protected void onPreExecute() {
		}

		@Override
		protected void onProgressUpdate(Void... values) {

		}

	}
}